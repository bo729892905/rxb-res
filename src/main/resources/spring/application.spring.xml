<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- <import resource="classpath:spring/spring-task.xml"/> -->

	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                标准配置
                <value>classpath:/application.properties</value>
            </list>
        </property>
    </bean> -->
    
    <context:property-placeholder location="classpath:/application.properties"/>
    
    <!--使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com.rxb.res"/>
    
    <!-- 可通过注解控制事务 -->
    <tx:annotation-driven/>
    
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
    	<property name="driver" value="${jdbc.driver}"/>
    	<property name="url" value="${jdbc.url}"/>
    	<property name="username" value="${jdbc.username}"/>
    	<property name="password" value="${jdbc.password}"/>
    </bean>
    
    <!-- 配置事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
    	<property name="typeAliasesPackage" value="com.rxb.res.entity"/>
    	<property name="mapperLocations" value="classpath:mybatis/dao/*.xml"/>
    </bean>
    
    <!-- 制定Dao层接口所在包名，自动查找 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.rxb.res.dao"/>
    </bean>

	<!-- shiro 配置开始 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	    <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>  
	</bean>
    <bean id="shiroRealm" class="com.rxb.res.interceptor.shiro.ShiroReaml"/>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="realm" ref="shiroRealm"/>
    	<property name="cacheManager" ref="cacheManager"/>
    </bean> 
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<property name="securityManager" ref="securityManager"/>
    	
    	<property name="loginUrl" value="/" />
		<property name="successUrl" value="/" />	
		<property name="unauthorizedUrl" value="/" />
		
		<property name="filterChainDefinitions">
			<value>
			/js/*      = anon
		    /css/*     = anon
		    /img/*     = anon
		    /images/*  = anon
		    
			/login*    = anon
			/*         = user
			</value>
		</property>
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- shiro 配置结束 -->

	<bean class="com.rxb.res.common.util.SystemConfig"/>
	<bean class="com.rxb.res.listener.InitDataListener"/>

</beans>